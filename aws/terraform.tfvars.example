# ------------------------------------------------------------------------------
# This code is part of the TrinityX software suite
# Copyright (C) 2023  ClusterVision Solutions b.v.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# File: azure/terraform.tfvars
# Author: Sumit Sharma
# E-Mail: sumit.sharma@clustervision.com
# Date: 2024-05-31
# Description: This is an example Terraform Variables file. (This is an
              autogenerated by the Ansible Playbook).
# Version: 1.0.0
# Status: Development
# License: GPL
# ------------------------------------------------------------------------------
# Notes:
# - This is an autogenerated file by the Ansible Playbook in the process of installation.
# - Update the default values will affect the infrastructure which is already created.
# - DO NOT EDIT THIS FILE, IF YOU ARE NOT SURE WHAT YOU ARE DOING.
# ------------------------------------------------------------------------------

# Azure Cloud Modules
azure_network     = true
azure_vpn         = true
azure_storage     = true
azure_images      = true
azure_controller  = true
azure_node        = true

# Azure Credentials
azure_subscription_id = ""
azure_client_id       = ""
azure_client_secret   = ""
azure_tenant_id       = ""

# Azure Resource Group & Location
azure_resource_group  = "TrinityX-resource"
azure_location        = "Germany West Central"
azure_resource_group_tag = {
  HPC = "TrinityX"
}

# Azure Network Service Group & Rules
azure_nsg      = "TrinityX-NSG"
azure_nsg_tags = {
  HPC        = "TrinityX",
  module     = "network",
  sub-module = "security group"
}
azure_nsg_security_rules = [
  {
    name                       = "Allow-SSH"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "22"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 22 for SSH."
  },
  {
    name                       = "Allow-HTTP"
    priority                   = 200
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "80"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 80 for Nginx."
  },
  {
    name                       = "Allow-HTTPS"
    priority                   = 300
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "443"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 443 for SSL."
  },
  {
    name                       = "Allow-HTTP-Alt"
    priority                   = 400
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "8080"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 8080 for OOD."
  },
  {
    name                       = "Allow-Custom-1"
    priority                   = 500
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "7050"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 7050 for Lunqa2 Daemon."
  },
  {
    name                       = "Allow-Custom-2"
    priority                   = 600
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "7055"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 7055 for Nginx."
  },
  {
    name                       = "Allow-Custom-3"
    priority                   = 700
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "7051"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 7051 for Nginx."
  },
  {
    name                       = "Allow-TFTP"
    priority                   = 800
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "69"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 69 for TFTP."
  },
  {
    name                       = "Allow-WireGuard"
    priority                   = 900
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "51820"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 51820 for TFTP."
  },
  {
    name                       = "Allow-SSH-Out"
    priority                   = 1000
    direction                  = "Outbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "22"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 22 for SSH."
  },
  {
    name                       = "Allow-HTTP-Out"
    priority                   = 1100
    direction                  = "Outbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "80"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 80 for Nginx."
  },
  {
    name                       = "Allow-HTTPS-Out"
    priority                   = 1200
    direction                  = "Outbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "443"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 443 for SSL."
  },
  {
    name                       = "Allow-HTTP-Alt-Out"
    priority                   = 1300
    direction                  = "Outbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "8080"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 8080 for OOD."
  },
  {
    name                       = "Allow-Custom-1-Out"
    priority                   = 1400
    direction                  = "Outbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "7050"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 7050 for Lunqa2 Daemon."
  },
  {
    name                       = "Allow-Custom-2-Out"
    priority                   = 1500
    direction                  = "Outbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "7055"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 7055 for Nginx."
  },
  {
    name                       = "Allow-Custom-3-Out"
    priority                   = 1600
    direction                  = "Outbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "7051"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 7051 for Nginx."
  },
  {
    name                       = "Allow-TFTP-Out"
    priority                   = 1700
    direction                  = "Outbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "69"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 69 for TFTP."
  },
  {
    name                       = "Allow-WireGuard-Out"
    priority                   = 1800
    direction                  = "Outbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "51820"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
    description                = "TrinityX Using Port 51820 for TFTP."
  }
]

# Azure Virtual Network, Address Space, Subnets
azure_virtual_network                = "TrinityX-Vnet"
azure_virtual_network_tags           = {
  HPC        = "TrinityX",
  module     = "network",
  sub-module = "virtual network"
}
azure_virtual_network_encryption     = "AllowUnencrypted"
azure_virtual_network_address_space  =  [
  "10.1.0.0/16"
]
azure_virtual_network_subnets        = [
  {"name": "cluster",   "address_prefix": "10.1.0.0/24", "security_group": "TrinityX-NSG"}
]

# Azure Virtual Network, Address Space, Subnets
azure_virtual_network_gateway_subnet = {"name": "GatewaySubnet", "address_prefix": "10.1.255.0/27", "security_group": null}
azure_local_network_gateway      = "TrinityXLNG"
azure_local_network_gateway_tags = {
  HPC        = "TrinityX",
  module     = "network",
  sub-module = "local network gateway"
}
azure_local_network_gateway_ip_address = "82.72.166.124"
azure_local_network_gateway_address_space = ["192.168.20.0/24"]
azure_local_network_gateway_bgp_asn = 0
azure_local_network_gateway_bgp_peering_address = ""
azure_local_network_gateway_bgp_peer_weight = 0

azure_vpn_public_ip              = "TrinityXVNGIP"
azure_vpn_public_ip_tags         = {
  HPC        = "TrinityX",
  module     = "network",
  sub-module = "virtual network gateway"
}
azure_vpn_public_ip_allocation_method = "Static"
azure_vpn_public_ip_sku               = "Standard"
azure_vpn_public_ip_zones             = ["1", "2", "3"]

azure_virtual_network_gateway                = "TrinityXVNG"
azure_virtual_network_gateway_tags           = {
  HPC        = "TrinityX",
  module     = "network",
  sub-module = "virtual network gateway"
}
azure_virtual_network_gateway_type           = "Vpn"
azure_virtual_network_gateway_vpn_type       = "RouteBased"
azure_virtual_network_gateway_sku            = "VpnGw2"
azure_virtual_network_gateway_generation     = "Generation2"
azure_virtual_network_gateway_bgp_nat        = false
azure_virtual_network_gateway_active_active  = false
azure_virtual_network_gateway_bgp            = false
azure_virtual_network_gateway_address_space  = ["192.168.20.0/24"]
azure_virtual_network_gateway_ip_config_name = "GatewayIpConfig"

azure_virtual_network_gateway_connection            = "azureconn"
azure_virtual_network_gateway_connection_tags       = {
  HPC        = "TrinityX",
  module     = "network",
  sub-module = "local-vertual network gateway connection"
}
azure_virtual_network_gateway_connection_type       = "IPsec"
azure_virtual_network_gateway_connection_mode       = "Default"
azure_virtual_network_gateway_connection_shared_key = ""

# Azure Storage Account
azure_storage_account               = "trinityx"
azure_storage_account_tag           = {
  HPC        = "TrinityX"
  module     = "storage",
  sub-module = "account"
}
azure_storage_account_kind          = "StorageV2"
azure_storage_account_tier          = "Standard"
azure_storage_replication_type      = "LRS"
azure_storage_access_tier           = "Hot"
azure_storage_min_tls               = "TLS1_2"
azure_storage_https_traffic         = true
azure_storage_access_key            = true
azure_storage_public_network        = true
azure_storage_oauth                 = false
azure_storage_hns                   = false
azure_storage_nfsv3                 = false
azure_storage_blob_versioning       = false
azure_storage_blob_change_feed      = false
azure_storage_retain_deleted_blobs  = 7

# Azure Storage Account Container
azure_storage_container             = "trinityx-images"
azure_storage_container_access_type = "private"

# Azure Storage Storage Blob VHD
azure_vhd             = "azure.vhd"
azure_vhd_type        = "Page"
azure_vhd_file_path   = "/trinity/images/azure.vhd"
azure_vhd_access_tier = "Hot"

# Azure Image
azure_image                     = "TrinityX-Compute"
azure_image_tags                = {
  HPC        = "TrinityX"
  module     = "image",
  sub-module = "vhd"
}
azure_image_zone_resilient      = true
azure_image_hyper_v_generation  = "V2"
azure_image_os_type             = "Linux"
azure_image_os_state            = "Generalized"
azure_image_cachinge            = "ReadWrite"

# Azure Compute Gallery
azure_compute_gallery             = "TrinityXGallery"
azure_compute_gallery_tags        = {
  HPC        = "TrinityX"
  module     = "image",
  sub-module = "gallery"
}
azure_compute_gallery_description = "This is TrinityX Image Gallery. Here you can attach your own OS Images and share depends on your need."
azure_compute_gallery_sharing     = "Private"

# Azure Compute Gallery Image
azure_shared_image                    = "TrinityX-Compute"
azure_shared_image_tags               = {
  HPC        = "TrinityX"
  module     = "image",
  sub-module = "gallery shared"
}
azure_shared_image_os_type            = "Linux"
azure_shared_image_trusted_launch     = true
azure_shared_image_hyper_v_generation = "V2"
azure_shared_accelerated_network      = true
azure_shared_architecture             = "x64"
azure_shared_image_publisher          = "TrinityX"
azure_shared_image_offer              = "HPC"
azure_shared_image_sku                = "iPXE-GRUB"

# Azure Compute Gallery Image Version
azure_shared_image_version                        = "0.0.1"
azure_shared_image_version_tags                   = {
  HPC        = "TrinityX"
  module     = "image",
  sub-module = "gallery version"
}
azure_shared_image_version_replication_mode       = "Full"
azure_shared_image_version_regional_replica_count = 1
azure_shared_image_version_latest                 = false
azure_shared_image_version_storage_account_type   = "Standard_ZRS"

# Azure Controller
azure_trinityx_ssh_key_algorithm  = "RSA"
azure_trinityx_ssh_key_rsa_bits   = 4096
azure_trinityx_ssh_key_name       = "TrinityX-SSH"
azure_trinityx_ssh_key_tags       = {
  HPC        = "TrinityX"
  module     = "controller",
  sub-module = "ssh"
}
azure_controller_ssh_public_key_access        = "Public Key Data"
azure_controller_controller_public_ip         = "TrinityXControllerIP"
azure_controller_public_ip_tags               = {
  HPC        = "TrinityX",
  module     = "controller",
  sub-module = "ip"
}
azure_controller_public_ip_allocation_method  = "Static"
azure_controller_public_ip_sku                = "Standard"
azure_controller_public_ip_zones              = ["1", "2", "3"]

azure_controller_network_interface              = "TrinityX-Controller-nic"
azure_controller_network_interface_tags         = {
  HPC        = "TrinityX"
  module     = "vm",
  sub-module = "controller"
}
azure_vm_network_ip_name                = "internal"
azure_controller_network_private_ip_allocation  = "Static"
azure_controller_private_ip_address             = "10.1.0.254"
azure_controller_private_ip_address_version     = "IPv4"

azure_controller_name                         = "trinityx-controller"
azure_controller_size                         = "Standard_D2s_v3"
azure_controller_delete_os_disk               = true
azure_controller_delete_data_disk             = true
azure_controller_image_publisher              = "resf"
azure_controller_image_offer                  = "rockylinux-x86_64"
azure_controller_image_sku                    = "8-lvm"
azure_controller_image_version                = "latest"
azure_controller_image_marketplace_agreement  = true
azure_controller_os_caching                   = "ReadWrite"
azure_controller_os_create                    = "FromImage"
azure_controller_os_disk_type                 = "Standard_LRS"
azure_controller_os_plan                      = "8-lvm"
azure_controller_os_plan_publisher            = "resf"
azure_controller_os_plan_product              = "rockylinux-x86_64"
azure_controller_os_username                  = "azureuser"
azure_controller_os_password                  = ""
azure_controller_disable_auth                 = false

# Azure Node
azure_hostlist                            = "azvm[001-004]"
azure_node_network_private_ip_allocation  = "Dynamic"
azure_node_size                           = "Standard_D2s_v3"
azure_node_delete_os_disk                 = true
azure_node_delete_data_disk               = true
azure_node_os_caching                     = "ReadWrite"
azure_node_os_create                      = "FromImage"
azure_node_os_disk_type                   = "Standard_LRS"
azure_node_os_username                    = "azureuser"
azure_node_os_password                    = ""
azure_node_disable_auth                   = false

subnet_id     = "Subnet ID from Network RUN"
storage_name  = "Storage Name from Storage RUN"
image_id      = "Image ID from Image RUN"



